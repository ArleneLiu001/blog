(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{376:function(t,a,s){"use strict";s.r(a);var i=s(18),e=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"git基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git基本操作"}},[t._v("#")]),t._v(" git基本操作")]),t._v(" "),a("h4",{attrs:{id:"版本回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回滚"}},[t._v("#")]),t._v(" 版本回滚")]),t._v(" "),a("ol",[a("li",[t._v("git log--\x3e获取修改信息")]),t._v(" "),a("li",[t._v("git reset --hard 版本号：获取想要的文件")]),t._v(" "),a("li",[t._v("git reset --hard 撤销修改")]),t._v(" "),a("li",[t._v("注意：误删的文件需从代码库下载时：git checkout --文件名")])]),t._v(" "),a("h4",{attrs:{id:"配置邮箱和用户名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置邮箱和用户名"}},[t._v("#")]),t._v(" 配置邮箱和用户名")]),t._v(" "),a("p",[t._v("git config --global")]),t._v(" "),a("h4",{attrs:{id:"第一次创建仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一次创建仓库"}},[t._v("#")]),t._v(" 第一次创建仓库：")]),t._v(" "),a("p",[t._v("git init --git add .---git commit -m ----git remote add origin ---git push -u origin master")]),t._v(" "),a("h4",{attrs:{id:"暂存分支-git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂存分支-git-stash"}},[t._v("#")]),t._v(" 暂存分支:git stash")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  正在A分支上开发，这个时候需修改个紧急bug 。\n1.在A分支上：git stash  把工作区暂时存储下来。  \n2，切换到dev分支，从dev分支拉取代码，创建C分支：git checkout dev --\x3egit checkout -b C  \n3.修改为以后:git add--\x3egit commit --\x3egit push ---》  \ngit push --set-upstream origin 本地分支名(将本地的分支推送到远程分支)  \n4.回到A分支：git checkout A   \n5.恢复stash的数据：方法1：git stash list (先查看)------》git stash   appy(恢复，但此时stash内容并没有删除)------》git stash drop.   方法2：git stash pop(恢复的同时也罢stash内容删除了)。\n")])])]),a("h4",{attrs:{id:"找回已删除的分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找回已删除的分支"}},[t._v("#")]),t._v(" 找回已删除的分支")]),t._v(" "),a("ol",[a("li",[t._v("git reflog :查看所有引用变动的日志。")]),t._v(" "),a("li",[t._v("找到被删除分支最后一个reflog id.也即是前面出现的那一串。")]),t._v(" "),a("li",[t._v("切回到删除分支之前的那个id:git checkout 6c4axxx")]),t._v(" "),a("li",[t._v("在这个基础上新建一个分支：git checkout -b newName")])])])}),[],!1,null,null,null);a.default=e.exports}}]);