(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{414:function(a,t,s){"use strict";s.r(t);var e=s(18),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"markdown使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#markdown使用"}},[a._v("#")]),a._v(" markdown使用")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 标题：（最多支持六级标题）\n1. # 一级标题\n2. ## 二级标题\n3. ###### 六级标题\n")])])]),t("h4",{attrs:{id:"强调"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强调"}},[a._v("#")]),a._v(" 强调：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("强调是通过在文字两侧加入星号(* ),下划线（_）,波浪线（~）等符号实现的，注意符号和需要强调的文字之间没有空格。多种格式可以复合使用。\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("*斜体*\n_斜体_\n**黑体**\n__黑体__\n~~删除线~~\n")])])]),t("h4",{attrs:{id:"列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[a._v("#")]),a._v(" 列表")]),a._v(" "),t("h5",{attrs:{id:"无序列表-无序列表用-任何一种都可以-注意符号和文字之间有空格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无序列表-无序列表用-任何一种都可以-注意符号和文字之间有空格"}},[a._v("#")]),a._v(" 无序列表：无序列表用-+*任何一种都可以，注意符号和文字之间有空格")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("   * item1\n     * item2\n          * item2a\n            * item2b\n")])])]),t("h4",{attrs:{id:"顺序列表-使用数字加点的方式-数字和点之间没有空格-而点和后面的文字之间有空格。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#顺序列表-使用数字加点的方式-数字和点之间没有空格-而点和后面的文字之间有空格。"}},[a._v("#")]),a._v(" 顺序列表：使用数字加点的方式，数字和点之间没有空格，而点和后面的文字之间有空格。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("1. item1\n2. item2\n\n")])])]),t("h4",{attrs:{id:"引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[a._v("#")]),a._v(" 引用")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  引用的内容用> 来表示，\n > we're living the future \n")])])]),t("h4",{attrs:{id:"代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[a._v("#")]),a._v(" 代码")]),a._v(" "),t("h5",{attrs:{id:"行内代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行内代码"}},[a._v("#")]),a._v(" 行内代码：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  代码之间分别用一个反引号（``）包起来\n  `hello,world`\n")])])]),t("h5",{attrs:{id:"代码块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码块"}},[a._v("#")]),a._v(" 代码块")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  连用三个反引号（```）将代码包起来。\n``` for(var i=0;i<100;i++){\n        console.log(i)\n} ``\n")])])]),t("p",[a._v("`")]),a._v(" "),t("h4",{attrs:{id:"分割线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分割线"}},[a._v("#")]),a._v(" 分割线")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" 三个或者三个以上的-或者*都可以\n ---\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);